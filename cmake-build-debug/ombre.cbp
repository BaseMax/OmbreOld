<?xml version="1.0" encoding="UTF-8"?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6"/>
	<Project>
		<Option title="ombre"/>
		<Option makefile_is_custom="1"/>
		<Option compiler="gcc"/>
		<Option virtualFolders="CMake Files\;CMake Files\external\;CMake Files\external\easylogging++\;CMake Files\external\miniupnp\;CMake Files\external\miniupnp\miniupnpc\;CMake Files\external\db_drivers\;CMake Files\external\db_drivers\liblmdb\;CMake Files\src\;CMake Files\src\p2p\;CMake Files\src\cryptonote_protocol\;CMake Files\src\common\;CMake Files\src\crypto\;CMake Files\src\ringct\;CMake Files\src\checkpoints\;CMake Files\src\cryptonote_basic\;CMake Files\src\cryptonote_core\;CMake Files\src\multisig\;CMake Files\src\blockchain_db\;CMake Files\src\mnemonics\;CMake Files\src\rpc\;CMake Files\src\serialization\;CMake Files\src\wallet\;CMake Files\src\wallet\api\;CMake Files\src\simplewallet\;CMake Files\src\gen_multisig\;CMake Files\src\daemonizer\;CMake Files\src\daemon\;CMake Files\src\blockchain_utilities\;CMake Files\src\debug_utilities\;CMake Files\src\blocks\;CMake Files\src\device\;CMake Files\cmake\;CMake Files\cmake-build-debug\;CMake Files\cmake-build-debug\generate_translations_header-prefix\;CMake Files\cmake-build-debug\generate_translations_header-prefix\tmp\;CMake Files\contrib\;CMake Files\contrib\epee\;CMake Files\contrib\epee\src\;"/>
		<Build>
			<Target title="all">
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 all"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="install/strip">
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 install/strip"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="install/local">
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 install/local"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="install">
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 install"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="list_install_components">
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 list_install_components"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="rebuild_cache">
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 rebuild_cache"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="generate_translations_header">
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 generate_translations_header"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="test">
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 test"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="doc">
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 doc"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="edit_cache">
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 edit_cache"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="libminiupnpc-static">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/external/miniupnp/miniupnpc/libminiupnpc.a" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/external/miniupnp/miniupnpc"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DMINIUPNPC_SET_SOCKET_TIMEOUT"/>
					<Add option="-D_BSD_SOURCE"/>
					<Add option="-D_DEFAULT_SOURCE"/>
					<Add option="-D_XOPEN_SOURCE=600"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/miniupnp/miniupnpc/Makefile&quot;  VERBOSE=1 libminiupnpc-static"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/miniupnp/miniupnpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/miniupnp/miniupnpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/miniupnp/miniupnpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="libminiupnpc-static/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/external/miniupnp/miniupnpc/libminiupnpc.a" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/external/miniupnp/miniupnpc"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DMINIUPNPC_SET_SOCKET_TIMEOUT"/>
					<Add option="-D_BSD_SOURCE"/>
					<Add option="-D_DEFAULT_SOURCE"/>
					<Add option="-D_XOPEN_SOURCE=600"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/miniupnp/miniupnpc/Makefile&quot;  VERBOSE=1 libminiupnpc-static/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/miniupnp/miniupnpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/miniupnp/miniupnpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/miniupnp/miniupnpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="lmdb">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/external/db_drivers/liblmdb/liblmdb.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/external/db_drivers/liblmdb"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/db_drivers/liblmdb/Makefile&quot;  VERBOSE=1 lmdb"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/db_drivers/liblmdb/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/db_drivers/liblmdb/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/db_drivers/liblmdb/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="lmdb/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/external/db_drivers/liblmdb/liblmdb.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/external/db_drivers/liblmdb"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/db_drivers/liblmdb/Makefile&quot;  VERBOSE=1 lmdb/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/db_drivers/liblmdb/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/db_drivers/liblmdb/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/db_drivers/liblmdb/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="easylogging">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/external/easylogging++/libeasylogging.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/external/easylogging++"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/external/easylogging++"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/easylogging++/Makefile&quot;  VERBOSE=1 easylogging"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/easylogging++/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/easylogging++/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/easylogging++/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="easylogging/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/external/easylogging++/libeasylogging.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/external/easylogging++"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/external/easylogging++"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/easylogging++/Makefile&quot;  VERBOSE=1 easylogging/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/easylogging++/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/easylogging++/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/external/easylogging++/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="epee">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/libepee.a" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/Makefile&quot;  VERBOSE=1 epee"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="epee/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/libepee.a" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/Makefile&quot;  VERBOSE=1 epee/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="epee_readline">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/libepee_readline.a" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/Makefile&quot;  VERBOSE=1 epee_readline"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="epee_readline/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/libepee_readline.a" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/Makefile&quot;  VERBOSE=1 epee_readline/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/contrib/epee/src/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="genversion">
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 genversion"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_version">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/CMakeFiles/obj_version.dir/obj_version.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 obj_version"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_version/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/CMakeFiles/obj_version.dir/obj_version.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 obj_version/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="version">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/libversion.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 version"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="version/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/libversion.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 version/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_common">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/obj_common.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/common"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/common/Makefile&quot;  VERBOSE=1 obj_common"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/common/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/common/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/common/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_common/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/obj_common.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/common"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/common/Makefile&quot;  VERBOSE=1 obj_common/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/common/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/common/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/common/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="common">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/libcommon.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/common"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/common/Makefile&quot;  VERBOSE=1 common"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/common/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/common/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/common/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="common/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/libcommon.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/common"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/common/Makefile&quot;  VERBOSE=1 common/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/common/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/common/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/common/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_cncrypto">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/obj_cncrypto.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/Makefile&quot;  VERBOSE=1 obj_cncrypto"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_cncrypto/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/obj_cncrypto.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/Makefile&quot;  VERBOSE=1 obj_cncrypto/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="cncrypto">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/libcncrypto.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/Makefile&quot;  VERBOSE=1 cncrypto"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="cncrypto/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/libcncrypto.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/Makefile&quot;  VERBOSE=1 cncrypto/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="ringct">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/libringct.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 ringct"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="ringct/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/libringct.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 ringct/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="ringct_basic">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/libringct_basic.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 ringct_basic"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="ringct_basic/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/libringct_basic.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 ringct_basic/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_ringct_basic">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/CMakeFiles/obj_ringct_basic.dir/obj_ringct_basic.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 obj_ringct_basic"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_ringct_basic/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/CMakeFiles/obj_ringct_basic.dir/obj_ringct_basic.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 obj_ringct_basic/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_ringct">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/CMakeFiles/obj_ringct.dir/obj_ringct.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 obj_ringct"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_ringct/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/CMakeFiles/obj_ringct.dir/obj_ringct.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 obj_ringct/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_checkpoints">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/CMakeFiles/obj_checkpoints.dir/obj_checkpoints.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/Makefile&quot;  VERBOSE=1 obj_checkpoints"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_checkpoints/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/CMakeFiles/obj_checkpoints.dir/obj_checkpoints.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/Makefile&quot;  VERBOSE=1 obj_checkpoints/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="checkpoints">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/libcheckpoints.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/Makefile&quot;  VERBOSE=1 checkpoints"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="checkpoints/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/libcheckpoints.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/Makefile&quot;  VERBOSE=1 checkpoints/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_cryptonote_basic">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/CMakeFiles/obj_cryptonote_basic.dir/obj_cryptonote_basic.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/Makefile&quot;  VERBOSE=1 obj_cryptonote_basic"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_cryptonote_basic/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/CMakeFiles/obj_cryptonote_basic.dir/obj_cryptonote_basic.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/Makefile&quot;  VERBOSE=1 obj_cryptonote_basic/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="cryptonote_basic">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/libcryptonote_basic.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/Makefile&quot;  VERBOSE=1 cryptonote_basic"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="cryptonote_basic/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/libcryptonote_basic.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/Makefile&quot;  VERBOSE=1 cryptonote_basic/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="cryptonote_core">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/libcryptonote_core.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/Makefile&quot;  VERBOSE=1 cryptonote_core"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="cryptonote_core/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/libcryptonote_core.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/Makefile&quot;  VERBOSE=1 cryptonote_core/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_cryptonote_core">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/CMakeFiles/obj_cryptonote_core.dir/obj_cryptonote_core.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/Makefile&quot;  VERBOSE=1 obj_cryptonote_core"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_cryptonote_core/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/CMakeFiles/obj_cryptonote_core.dir/obj_cryptonote_core.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/Makefile&quot;  VERBOSE=1 obj_cryptonote_core/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="multisig">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/libmultisig.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/Makefile&quot;  VERBOSE=1 multisig"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="multisig/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/libmultisig.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/Makefile&quot;  VERBOSE=1 multisig/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_multisig">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/CMakeFiles/obj_multisig.dir/obj_multisig.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/Makefile&quot;  VERBOSE=1 obj_multisig"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_multisig/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/CMakeFiles/obj_multisig.dir/obj_multisig.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/Makefile&quot;  VERBOSE=1 obj_multisig/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_blockchain_db">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/CMakeFiles/obj_blockchain_db.dir/obj_blockchain_db.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/Makefile&quot;  VERBOSE=1 obj_blockchain_db"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_blockchain_db/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/CMakeFiles/obj_blockchain_db.dir/obj_blockchain_db.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/Makefile&quot;  VERBOSE=1 obj_blockchain_db/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="blockchain_db">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/libblockchain_db.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/Makefile&quot;  VERBOSE=1 blockchain_db"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="blockchain_db/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/libblockchain_db.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/Makefile&quot;  VERBOSE=1 blockchain_db/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_mnemonics">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/CMakeFiles/obj_mnemonics.dir/obj_mnemonics.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/Makefile&quot;  VERBOSE=1 obj_mnemonics"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_mnemonics/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/CMakeFiles/obj_mnemonics.dir/obj_mnemonics.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/Makefile&quot;  VERBOSE=1 obj_mnemonics/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="mnemonics">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/libmnemonics.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/Makefile&quot;  VERBOSE=1 mnemonics"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="mnemonics/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/libmnemonics.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/Makefile&quot;  VERBOSE=1 mnemonics/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="rpc">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/librpc.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 rpc"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="rpc/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/librpc.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 rpc/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_rpc">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/CMakeFiles/obj_rpc.dir/obj_rpc.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 obj_rpc"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_rpc/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/CMakeFiles/obj_rpc.dir/obj_rpc.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 obj_rpc/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="rpc_base">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/librpc_base.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 rpc_base"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="rpc_base/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/librpc_base.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 rpc_base/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_rpc_base">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/CMakeFiles/obj_rpc_base.dir/obj_rpc_base.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 obj_rpc_base"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_rpc_base/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/CMakeFiles/obj_rpc_base.dir/obj_rpc_base.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 obj_rpc_base/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="daemon_messages">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/libdaemon_messages.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 daemon_messages"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="daemon_messages/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/libdaemon_messages.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 daemon_messages/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_daemon_messages">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/CMakeFiles/obj_daemon_messages.dir/obj_daemon_messages.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 obj_daemon_messages"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_daemon_messages/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/CMakeFiles/obj_daemon_messages.dir/obj_daemon_messages.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 obj_daemon_messages/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_daemon_rpc_server">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/CMakeFiles/obj_daemon_rpc_server.dir/obj_daemon_rpc_server.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 obj_daemon_rpc_server"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_daemon_rpc_server/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/CMakeFiles/obj_daemon_rpc_server.dir/obj_daemon_rpc_server.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 obj_daemon_rpc_server/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="daemon_rpc_server">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/libdaemon_rpc_server.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 daemon_rpc_server"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="daemon_rpc_server/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/libdaemon_rpc_server.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 daemon_rpc_server/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="serialization">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/libserialization.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/Makefile&quot;  VERBOSE=1 serialization"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="serialization/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/libserialization.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/Makefile&quot;  VERBOSE=1 serialization/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_serialization">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/CMakeFiles/obj_serialization.dir/obj_serialization.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/Makefile&quot;  VERBOSE=1 obj_serialization"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_serialization/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/CMakeFiles/obj_serialization.dir/obj_serialization.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/Makefile&quot;  VERBOSE=1 obj_serialization/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_wallet">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/CMakeFiles/obj_wallet.dir/obj_wallet.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 obj_wallet"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_wallet/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/CMakeFiles/obj_wallet.dir/obj_wallet.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 obj_wallet/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="wallet">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/libwallet.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 wallet"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="wallet/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/libwallet.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 wallet/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="wallet_rpc_server">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-wallet-rpc" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 wallet_rpc_server"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="wallet_rpc_server/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-wallet-rpc" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 wallet_rpc_server/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_wallet_api">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/CMakeFiles/obj_wallet_api.dir/obj_wallet_api.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/Makefile&quot;  VERBOSE=1 obj_wallet_api"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_wallet_api/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/CMakeFiles/obj_wallet_api.dir/obj_wallet_api.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/Makefile&quot;  VERBOSE=1 obj_wallet_api/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="wallet_api">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/libwallet_api.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/Makefile&quot;  VERBOSE=1 wallet_api"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="wallet_api/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/libwallet_api.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/Makefile&quot;  VERBOSE=1 wallet_api/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_p2p">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/CMakeFiles/obj_p2p.dir/obj_p2p.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/Makefile&quot;  VERBOSE=1 obj_p2p"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_p2p/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/CMakeFiles/obj_p2p.dir/obj_p2p.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/Makefile&quot;  VERBOSE=1 obj_p2p/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="p2p">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/libp2p.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/Makefile&quot;  VERBOSE=1 p2p"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="p2p/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/libp2p.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/Makefile&quot;  VERBOSE=1 p2p/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_cryptonote_protocol">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/CMakeFiles/obj_cryptonote_protocol.dir/obj_cryptonote_protocol.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/Makefile&quot;  VERBOSE=1 obj_cryptonote_protocol"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_cryptonote_protocol/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/CMakeFiles/obj_cryptonote_protocol.dir/obj_cryptonote_protocol.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/Makefile&quot;  VERBOSE=1 obj_cryptonote_protocol/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="cryptonote_protocol">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/libcryptonote_protocol.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/Makefile&quot;  VERBOSE=1 cryptonote_protocol"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="cryptonote_protocol/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/libcryptonote_protocol.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/Makefile&quot;  VERBOSE=1 cryptonote_protocol/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="simplewallet">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-wallet-cli" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/simplewallet"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/simplewallet/Makefile&quot;  VERBOSE=1 simplewallet"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/simplewallet/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/simplewallet/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/simplewallet/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="simplewallet/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-wallet-cli" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/simplewallet"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/simplewallet/Makefile&quot;  VERBOSE=1 simplewallet/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/simplewallet/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/simplewallet/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/simplewallet/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="gen_multisig">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-gen-trusted-multisig" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/gen_multisig"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/gen_multisig/Makefile&quot;  VERBOSE=1 gen_multisig"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/gen_multisig/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/gen_multisig/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/gen_multisig/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="gen_multisig/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-gen-trusted-multisig" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/gen_multisig"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/gen_multisig/Makefile&quot;  VERBOSE=1 gen_multisig/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/gen_multisig/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/gen_multisig/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/gen_multisig/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="daemonizer">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/libdaemonizer.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DDEBUG_TMPDIR_LOG=1"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/Makefile&quot;  VERBOSE=1 daemonizer"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="daemonizer/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/libdaemonizer.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DDEBUG_TMPDIR_LOG=1"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/Makefile&quot;  VERBOSE=1 daemonizer/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_daemonizer">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/CMakeFiles/obj_daemonizer.dir/obj_daemonizer.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DDEBUG_TMPDIR_LOG=1"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/Makefile&quot;  VERBOSE=1 obj_daemonizer"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_daemonizer/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/CMakeFiles/obj_daemonizer.dir/obj_daemonizer.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DDEBUG_TMPDIR_LOG=1"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/Makefile&quot;  VERBOSE=1 obj_daemonizer/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="daemon">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monerod" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/daemon"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemon/Makefile&quot;  VERBOSE=1 daemon"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemon/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemon/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemon/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="daemon/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monerod" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/daemon"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemon/Makefile&quot;  VERBOSE=1 daemon/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemon/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemon/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/daemon/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="blockchain_usage">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-blockchain-usage" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 blockchain_usage"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="blockchain_usage/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-blockchain-usage" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 blockchain_usage/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="blockchain_blackball">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-blockchain-mark-spent-outputs" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 blockchain_blackball"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="blockchain_blackball/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-blockchain-mark-spent-outputs" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 blockchain_blackball/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="blockchain_export">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-blockchain-export" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 blockchain_export"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="blockchain_export/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-blockchain-export" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 blockchain_export/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="blockchain_import">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-blockchain-import" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DARCH_WIDTH=64"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 blockchain_import"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="blockchain_import/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-blockchain-import" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DARCH_WIDTH=64"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 blockchain_import/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="blockchain_ancestry">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-blockchain-ancestry" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 blockchain_ancestry"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="blockchain_ancestry/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-blockchain-ancestry" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 blockchain_ancestry/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="blockchain_depth">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-blockchain-depth" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 blockchain_depth"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="blockchain_depth/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-blockchain-depth" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 blockchain_depth/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="cn_deserialize">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-utils-deserialize" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities/Makefile&quot;  VERBOSE=1 cn_deserialize"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="cn_deserialize/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-utils-deserialize" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities/Makefile&quot;  VERBOSE=1 cn_deserialize/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="object_sizes">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-utils-object-sizes" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities/Makefile&quot;  VERBOSE=1 object_sizes"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="object_sizes/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/bin/monero-utils-object-sizes" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DSTACK_TRACE"/>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add option="-DMINIUPNP_STATICLIB"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/../home/heinenn/Coding/ombre/external/miniupnp/miniupnpc"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities/Makefile&quot;  VERBOSE=1 object_sizes/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/debug_utilities/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="blocks">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/blocks/libblocks.a" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blocks"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blocks/Makefile&quot;  VERBOSE=1 blocks"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blocks/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blocks/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blocks/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="blocks/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/blocks/libblocks.a" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/blocks"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blocks/Makefile&quot;  VERBOSE=1 blocks/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blocks/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blocks/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/blocks/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="device">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/device/libdevice.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/device"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/device/Makefile&quot;  VERBOSE=1 device"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/device/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/device/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/device/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="device/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/device/libdevice.so" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/device"/>
				<Option object_output="./"/>
				<Option type="3"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/device/Makefile&quot;  VERBOSE=1 device/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/device/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/device/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/device/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_device">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/device/CMakeFiles/obj_device.dir/obj_device.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/device"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/device/Makefile&quot;  VERBOSE=1 obj_device"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/device/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/device/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/device/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="obj_device/fast">
				<Option output="/home/heinenn/Coding/ombre/cmake-build-debug/src/device/CMakeFiles/obj_device.dir/obj_device.objlib" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/heinenn/Coding/ombre/cmake-build-debug/src/device"/>
				<Option object_output="./"/>
				<Option type="2"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add option="-DPER_BLOCK_CHECKPOINT"/>
					<Add option="-DBUILD_SHARED_LIBS"/>
					<Add option="-DDEFAULT_DB_TYPE=&quot;lmdb&quot;"/>
					<Add option="-DBLOCKCHAIN_DB=DB_LMDB"/>
					<Add option="-DHAVE_STRPTIME"/>
					<Add option="-DAUTO_INITIALIZE_EASYLOGGINGPP"/>
					<Add option="-DHAVE_READLINE"/>
					<Add directory="/home/heinenn/Coding/ombre/external/rapidjson/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external/easylogging++"/>
					<Add directory="/home/heinenn/Coding/ombre/src"/>
					<Add directory="/home/heinenn/Coding/ombre/contrib/epee/include"/>
					<Add directory="/home/heinenn/Coding/ombre/external"/>
					<Add directory="/home/heinenn/Coding/ombre/cmake-build-debug/translations"/>
					<Add directory="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb"/>
					<Add directory="/usr/include/c++/7"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/7"/>
					<Add directory="/usr/include/c++/7/backward"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/device/Makefile&quot;  VERBOSE=1 obj_device/fast"/>
					<CompileFile command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/device/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/device/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j2 -f &quot;/home/heinenn/Coding/ombre/cmake-build-debug/src/device/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
		</Build>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/external/miniupnp/miniupnpc/miniupnpcstrings.h">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/CMakeFiles/obj_version.dir/__/version.cpp.o">
			<Option target="version"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/CMakeFiles/obj_blockchain_db.dir/blockchain_db.cpp.o">
			<Option target="blockchain_db"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_db/CMakeFiles/obj_blockchain_db.dir/lmdb/db_lmdb.cpp.o">
			<Option target="blockchain_db"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/blockchain_utilities/blocksdat.o">
			<Option target="blockchain_import"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/blocks/blocks.o">
			<Option target="blocks"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/blocks/stagenet_blocks.o">
			<Option target="blocks"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/blocks/testnet_blocks.o">
			<Option target="blocks"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/checkpoints/CMakeFiles/obj_checkpoints.dir/checkpoints.cpp.o">
			<Option target="checkpoints"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/aligned.c.o">
			<Option target="common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/base58.cpp.o">
			<Option target="common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/command_line.cpp.o">
			<Option target="common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/dns_utils.cpp.o">
			<Option target="common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/download.cpp.o">
			<Option target="common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/error.cpp.o">
			<Option target="common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/expect.cpp.o">
			<Option target="common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/i18n.cpp.o">
			<Option target="common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/notify.cpp.o">
			<Option target="common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/password.cpp.o">
			<Option target="common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/perf_timer.cpp.o">
			<Option target="common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/spawn.cpp.o">
			<Option target="common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/stack_trace.cpp.o">
			<Option target="common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/threadpool.cpp.o">
			<Option target="common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/updates.cpp.o">
			<Option target="common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/common/CMakeFiles/obj_common.dir/util.cpp.o">
			<Option target="common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/aesb.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/blake256.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/chacha.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/crypto-ops-data.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/crypto-ops.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/crypto.cpp.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/groestl.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/hash-extra-blake.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/hash-extra-groestl.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/hash-extra-jh.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/hash-extra-skein.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/hash.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/jh.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/keccak.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/oaes_lib.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/random.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/skein.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/slow-hash.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/crypto/CMakeFiles/obj_cncrypto.dir/tree-hash.c.o">
			<Option target="cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/CMakeFiles/obj_cryptonote_basic.dir/account.cpp.o">
			<Option target="cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/CMakeFiles/obj_cryptonote_basic.dir/cryptonote_basic_impl.cpp.o">
			<Option target="cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/CMakeFiles/obj_cryptonote_basic.dir/cryptonote_format_utils.cpp.o">
			<Option target="cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/CMakeFiles/obj_cryptonote_basic.dir/difficulty.cpp.o">
			<Option target="cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/CMakeFiles/obj_cryptonote_basic.dir/hardfork.cpp.o">
			<Option target="cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_basic/CMakeFiles/obj_cryptonote_basic.dir/miner.cpp.o">
			<Option target="cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/CMakeFiles/obj_cryptonote_core.dir/blockchain.cpp.o">
			<Option target="cryptonote_core"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/CMakeFiles/obj_cryptonote_core.dir/cryptonote_core.cpp.o">
			<Option target="cryptonote_core"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/CMakeFiles/obj_cryptonote_core.dir/cryptonote_tx_utils.cpp.o">
			<Option target="cryptonote_core"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_core/CMakeFiles/obj_cryptonote_core.dir/tx_pool.cpp.o">
			<Option target="cryptonote_core"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/CMakeFiles/obj_cryptonote_protocol.dir/block_queue.cpp.o">
			<Option target="cryptonote_protocol"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/cryptonote_protocol/CMakeFiles/obj_cryptonote_protocol.dir/cryptonote_protocol_handler-base.cpp.o">
			<Option target="cryptonote_protocol"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/daemon/blocksdat.o">
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/daemonizer/CMakeFiles/obj_daemonizer.dir/posix_fork.cpp.o">
			<Option target="daemonizer"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/device/CMakeFiles/obj_device.dir/device.cpp.o">
			<Option target="device"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/device/CMakeFiles/obj_device.dir/device_default.cpp.o">
			<Option target="device"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/device/CMakeFiles/obj_device.dir/log.cpp.o">
			<Option target="device"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/mnemonics/CMakeFiles/obj_mnemonics.dir/electrum-words.cpp.o">
			<Option target="mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/multisig/CMakeFiles/obj_multisig.dir/multisig.cpp.o">
			<Option target="multisig"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/p2p/CMakeFiles/obj_p2p.dir/net_node.cpp.o">
			<Option target="p2p"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/CMakeFiles/obj_ringct.dir/rctSigs.cpp.o">
			<Option target="ringct"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/CMakeFiles/obj_ringct_basic.dir/bulletproofs.cc.o">
			<Option target="ringct_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/CMakeFiles/obj_ringct_basic.dir/multiexp.cc.o">
			<Option target="ringct_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/CMakeFiles/obj_ringct_basic.dir/rctCryptoOps.c.o">
			<Option target="ringct_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/CMakeFiles/obj_ringct_basic.dir/rctOps.cpp.o">
			<Option target="ringct_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/ringct/CMakeFiles/obj_ringct_basic.dir/rctTypes.cpp.o">
			<Option target="ringct_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/CMakeFiles/obj_daemon_messages.dir/daemon_messages.cpp.o">
			<Option target="daemon_messages"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/CMakeFiles/obj_daemon_messages.dir/message.cpp.o">
			<Option target="daemon_messages"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/CMakeFiles/obj_daemon_rpc_server.dir/daemon_handler.cpp.o">
			<Option target="daemon_rpc_server"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/CMakeFiles/obj_daemon_rpc_server.dir/zmq_server.cpp.o">
			<Option target="daemon_rpc_server"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/CMakeFiles/obj_rpc.dir/core_rpc_server.cpp.o">
			<Option target="rpc"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/CMakeFiles/obj_rpc.dir/instanciations.cpp.o">
			<Option target="rpc"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/rpc/CMakeFiles/obj_rpc_base.dir/rpc_args.cpp.o">
			<Option target="rpc_base"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/serialization/CMakeFiles/obj_serialization.dir/json_object.cpp.o">
			<Option target="serialization"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/CMakeFiles/obj_wallet.dir/node_rpc_proxy.cpp.o">
			<Option target="wallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/CMakeFiles/obj_wallet.dir/ringdb.cpp.o">
			<Option target="wallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/CMakeFiles/obj_wallet.dir/wallet2.cpp.o">
			<Option target="wallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/CMakeFiles/obj_wallet.dir/wallet_args.cpp.o">
			<Option target="wallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/CMakeFiles/obj_wallet_api.dir/address_book.cpp.o">
			<Option target="wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/CMakeFiles/obj_wallet_api.dir/pending_transaction.cpp.o">
			<Option target="wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/CMakeFiles/obj_wallet_api.dir/subaddress.cpp.o">
			<Option target="wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/CMakeFiles/obj_wallet_api.dir/subaddress_account.cpp.o">
			<Option target="wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/CMakeFiles/obj_wallet_api.dir/transaction_history.cpp.o">
			<Option target="wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/CMakeFiles/obj_wallet_api.dir/transaction_info.cpp.o">
			<Option target="wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/CMakeFiles/obj_wallet_api.dir/unsigned_transaction.cpp.o">
			<Option target="wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/CMakeFiles/obj_wallet_api.dir/utils.cpp.o">
			<Option target="wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/CMakeFiles/obj_wallet_api.dir/wallet.cpp.o">
			<Option target="wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/src/wallet/api/CMakeFiles/obj_wallet_api.dir/wallet_manager.cpp.o">
			<Option target="wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/version.cpp">
			<Option target="obj_version"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/version.cpp.rule">
			<Option target="obj_version"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/contrib/epee/src/connection_basic.cpp">
			<Option target="epee"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/contrib/epee/src/hex.cpp">
			<Option target="epee"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/contrib/epee/src/http_auth.cpp">
			<Option target="epee"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/contrib/epee/src/memwipe.c">
			<Option target="epee"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/contrib/epee/src/mlocker.cpp">
			<Option target="epee"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/contrib/epee/src/mlog.cpp">
			<Option target="epee"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/contrib/epee/src/net_utils_base.cpp">
			<Option target="epee"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/contrib/epee/src/network_throttle-detail.cpp">
			<Option target="epee"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/contrib/epee/src/network_throttle.cpp">
			<Option target="epee"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/contrib/epee/src/readline_buffer.cpp">
			<Option target="epee_readline"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/contrib/epee/src/string_tools.cpp">
			<Option target="epee"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/contrib/epee/src/wipeable_string.cpp">
			<Option target="epee"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb/mdb.c">
			<Option target="lmdb"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb/midl.c">
			<Option target="lmdb"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb/midl.h">
			<Option target="lmdb"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/easylogging++/easylogging++.cc">
			<Option target="easylogging"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/easylogging++/easylogging++.h">
			<Option target="easylogging"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/connecthostport.c">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/connecthostport.h">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/igd_desc_parse.c">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/igd_desc_parse.h">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/minisoap.c">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/minisoap.h">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/minissdpc.c">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/minissdpc.h">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/miniupnpc.c">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/miniupnpc.h">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/miniupnpctypes.h">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/miniwget.c">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/miniwget.h">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/minixml.c">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/minixml.h">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/portlistingparse.c">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/portlistingparse.h">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/receivedata.c">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/receivedata.h">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/upnpcommands.c">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/upnpcommands.h">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/upnpdev.c">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/upnpdev.h">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/upnperrors.c">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/upnperrors.h">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/upnpreplyparse.c">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/upnpreplyparse.h">
			<Option target="libminiupnpc-static"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_db/blockchain_db.cpp">
			<Option target="obj_blockchain_db"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_db/blockchain_db.h">
			<Option target="obj_blockchain_db"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_db/lmdb/db_lmdb.cpp">
			<Option target="obj_blockchain_db"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_db/lmdb/db_lmdb.h">
			<Option target="obj_blockchain_db"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_utilities/blockchain_ancestry.cpp">
			<Option target="blockchain_ancestry"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_utilities/blockchain_blackball.cpp">
			<Option target="blockchain_blackball"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_utilities/blockchain_depth.cpp">
			<Option target="blockchain_depth"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_utilities/blockchain_export.cpp">
			<Option target="blockchain_export"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_utilities/blockchain_import.cpp">
			<Option target="blockchain_import"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_utilities/blockchain_usage.cpp">
			<Option target="blockchain_usage"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_utilities/blocksdat_file.cpp">
			<Option target="blockchain_export"/>
			<Option target="blockchain_import"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_utilities/blocksdat_file.h">
			<Option target="blockchain_blackball"/>
			<Option target="blockchain_export"/>
			<Option target="blockchain_import"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_utilities/bootstrap_file.cpp">
			<Option target="blockchain_export"/>
			<Option target="blockchain_import"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_utilities/bootstrap_file.h">
			<Option target="blockchain_blackball"/>
			<Option target="blockchain_export"/>
			<Option target="blockchain_import"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_utilities/bootstrap_serialization.h">
			<Option target="blockchain_blackball"/>
			<Option target="blockchain_export"/>
			<Option target="blockchain_import"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blocks/blockexports.c">
			<Option target="blocks"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blocks/blocks.dat">
			<Option target="blocks"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blocks/checkpoints.dat">
			<Option target="daemon"/>
			<Option target="blockchain_import"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blocks/stagenet_blocks.dat">
			<Option target="blocks"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blocks/testnet_blocks.dat">
			<Option target="blocks"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/checkpoints/checkpoints.cpp">
			<Option target="obj_checkpoints"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/checkpoints/checkpoints.h">
			<Option target="obj_checkpoints"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/aligned.c">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/aligned.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/apply_permutation.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/base58.cpp">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/base58.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/boost_serialization_helper.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/command_line.cpp">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/command_line.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/common_fwd.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/dns_utils.cpp">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/dns_utils.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/download.cpp">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/download.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/error.cpp">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/error.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/expect.cpp">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/expect.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/http_connection.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/i18n.cpp">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/i18n.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/int-util.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/notify.cpp">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/notify.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/password.cpp">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/password.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/perf_timer.cpp">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/perf_timer.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/pod-class.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/rpc_client.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/scoped_message_writer.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/spawn.cpp">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/spawn.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/stack_trace.cpp">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/stack_trace.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/threadpool.cpp">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/threadpool.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/unordered_containers_boost_serialization.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/updates.cpp">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/updates.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/util.cpp">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/util.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/varint.h">
			<Option target="obj_common"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/aesb.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/blake256.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/blake256.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/chacha.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/chacha.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/crypto-ops-data.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/crypto-ops.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/crypto-ops.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/crypto.cpp">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/crypto.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/generic-ops.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/groestl.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/groestl.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/groestl_tables.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/hash-extra-blake.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/hash-extra-groestl.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/hash-extra-jh.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/hash-extra-skein.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/hash-ops.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/hash.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/hash.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/initializer.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/jh.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/jh.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/keccak.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/keccak.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/oaes_config.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/oaes_lib.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/oaes_lib.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/random.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/random.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/skein.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/skein.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/skein_port.h">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/slow-hash.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/tree-hash.c">
			<Option target="obj_cncrypto"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/account.cpp">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/account.h">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/account_boost_serialization.h">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/connection_context.h">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/cryptonote_basic.h">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/cryptonote_basic_impl.cpp">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/cryptonote_basic_impl.h">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/cryptonote_boost_serialization.h">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/cryptonote_format_utils.cpp">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/cryptonote_format_utils.h">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/cryptonote_stat_info.h">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/difficulty.cpp">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/difficulty.h">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/hardfork.cpp">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/hardfork.h">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/miner.cpp">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/miner.h">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/tx_extra.h">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/verification_context.h">
			<Option target="obj_cryptonote_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_core/blockchain.cpp">
			<Option target="obj_cryptonote_core"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_core/blockchain.h">
			<Option target="obj_cryptonote_core"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_core/blockchain_storage_boost_serialization.h">
			<Option target="obj_cryptonote_core"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_core/cryptonote_core.cpp">
			<Option target="obj_cryptonote_core"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_core/cryptonote_core.h">
			<Option target="obj_cryptonote_core"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_core/cryptonote_tx_utils.cpp">
			<Option target="obj_cryptonote_core"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_core/cryptonote_tx_utils.h">
			<Option target="obj_cryptonote_core"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_core/tx_pool.cpp">
			<Option target="obj_cryptonote_core"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_core/tx_pool.h">
			<Option target="obj_cryptonote_core"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_protocol/CMakeLists.txt">
			<Option target="obj_cryptonote_protocol"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_protocol/block_queue.cpp">
			<Option target="obj_cryptonote_protocol"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_protocol/block_queue.h">
			<Option target="obj_cryptonote_protocol"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_protocol/cryptonote_protocol_defs.h">
			<Option target="obj_cryptonote_protocol"/>
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_protocol/cryptonote_protocol_handler-base.cpp">
			<Option target="obj_cryptonote_protocol"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_protocol/cryptonote_protocol_handler.h">
			<Option target="obj_cryptonote_protocol"/>
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_protocol/cryptonote_protocol_handler.inl">
			<Option target="obj_cryptonote_protocol"/>
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_protocol/cryptonote_protocol_handler_common.h">
			<Option target="obj_cryptonote_protocol"/>
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemon/command_parser_executor.cpp">
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemon/command_parser_executor.h">
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemon/command_server.cpp">
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemon/command_server.h">
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemon/core.h">
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemon/daemon.cpp">
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemon/daemon.h">
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemon/executor.cpp">
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemon/executor.h">
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemon/main.cpp">
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemon/p2p.h">
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemon/protocol.h">
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemon/rpc.h">
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemon/rpc_command_executor.cpp">
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemon/rpc_command_executor.h">
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemonizer/daemonizer.h">
			<Option target="obj_daemonizer"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemonizer/posix_daemonizer.inl">
			<Option target="obj_daemonizer"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemonizer/posix_fork.cpp">
			<Option target="obj_daemonizer"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemonizer/posix_fork.h">
			<Option target="obj_daemonizer"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/debug_utilities/cn_deserialize.cpp">
			<Option target="cn_deserialize"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/debug_utilities/object_sizes.cpp">
			<Option target="object_sizes"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/device/device.cpp">
			<Option target="obj_device"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/device/device.hpp">
			<Option target="obj_device"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/device/device_default.cpp">
			<Option target="obj_device"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/device/device_default.hpp">
			<Option target="obj_device"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/device/device_io.hpp">
			<Option target="obj_device"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/device/log.cpp">
			<Option target="obj_device"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/device/log.hpp">
			<Option target="obj_device"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/gen_multisig/gen_multisig.cpp">
			<Option target="gen_multisig"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/chinese_simplified.h">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/dutch.h">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/electrum-words.cpp">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/electrum-words.h">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/english.h">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/english_old.h">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/esperanto.h">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/french.h">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/german.h">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/italian.h">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/japanese.h">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/language_base.h">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/lojban.h">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/portuguese.h">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/russian.h">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/singleton.h">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/spanish.h">
			<Option target="obj_mnemonics"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/multisig/multisig.cpp">
			<Option target="obj_multisig"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/multisig/multisig.h">
			<Option target="obj_multisig"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/p2p/CMakeLists.txt">
			<Option target="obj_p2p"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/p2p/net_node.cpp">
			<Option target="obj_p2p"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/p2p/net_node.h">
			<Option target="obj_p2p"/>
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/p2p/net_node.inl">
			<Option target="obj_p2p"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/p2p/net_node_common.h">
			<Option target="obj_p2p"/>
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/p2p/net_peerlist.h">
			<Option target="obj_p2p"/>
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/p2p/net_peerlist_boost_serialization.h">
			<Option target="obj_p2p"/>
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/p2p/p2p_protocol_defs.h">
			<Option target="obj_p2p"/>
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/p2p/stdafx.h">
			<Option target="obj_p2p"/>
			<Option target="daemon"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/ringct/bulletproofs.cc">
			<Option target="obj_ringct_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/ringct/bulletproofs.h">
			<Option target="obj_ringct_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/ringct/multiexp.cc">
			<Option target="obj_ringct_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/ringct/multiexp.h">
			<Option target="obj_ringct_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/ringct/rctCryptoOps.c">
			<Option target="obj_ringct_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/ringct/rctCryptoOps.h">
			<Option target="obj_ringct_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/ringct/rctOps.cpp">
			<Option target="obj_ringct_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/ringct/rctOps.h">
			<Option target="obj_ringct_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/ringct/rctSigs.cpp">
			<Option target="obj_ringct"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/ringct/rctSigs.h">
			<Option target="obj_ringct"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/ringct/rctTypes.cpp">
			<Option target="obj_ringct_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/ringct/rctTypes.h">
			<Option target="obj_ringct_basic"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/rpc/core_rpc_server.cpp">
			<Option target="obj_rpc"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/rpc/core_rpc_server.h">
			<Option target="obj_rpc"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/rpc/daemon_handler.cpp">
			<Option target="obj_daemon_rpc_server"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/rpc/daemon_handler.h">
			<Option target="obj_daemon_rpc_server"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/rpc/daemon_messages.cpp">
			<Option target="obj_daemon_messages"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/rpc/daemon_messages.h">
			<Option target="obj_daemon_messages"/>
			<Option target="obj_daemon_rpc_server"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/rpc/instanciations.cpp">
			<Option target="obj_rpc"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/rpc/message.cpp">
			<Option target="obj_daemon_messages"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/rpc/message.h">
			<Option target="obj_daemon_messages"/>
			<Option target="obj_daemon_rpc_server"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/rpc/rpc_args.cpp">
			<Option target="obj_rpc_base"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/rpc/rpc_args.h">
			<Option target="obj_rpc_base"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/rpc/rpc_handler.h">
			<Option target="obj_daemon_rpc_server"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/rpc/zmq_server.cpp">
			<Option target="obj_daemon_rpc_server"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/rpc/zmq_server.h">
			<Option target="obj_daemon_rpc_server"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/serialization/json_object.cpp">
			<Option target="obj_serialization"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/serialization/json_object.h">
			<Option target="obj_serialization"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/simplewallet/simplewallet.cpp">
			<Option target="simplewallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/simplewallet/simplewallet.h">
			<Option target="simplewallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/address_book.cpp">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/address_book.h">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/common_defines.h">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/pending_transaction.cpp">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/pending_transaction.h">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/subaddress.cpp">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/subaddress.h">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/subaddress_account.cpp">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/subaddress_account.h">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/transaction_history.cpp">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/transaction_history.h">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/transaction_info.cpp">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/transaction_info.h">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/unsigned_transaction.cpp">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/unsigned_transaction.h">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/utils.cpp">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/wallet.cpp">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/wallet.h">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/wallet2_api.h">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/wallet_manager.cpp">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/wallet_manager.h">
			<Option target="obj_wallet_api"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/node_rpc_proxy.cpp">
			<Option target="obj_wallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/node_rpc_proxy.h">
			<Option target="obj_wallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/ringdb.cpp">
			<Option target="obj_wallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/ringdb.h">
			<Option target="obj_wallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/wallet2.cpp">
			<Option target="obj_wallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/wallet2.h">
			<Option target="obj_wallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/wallet_args.cpp">
			<Option target="obj_wallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/wallet_args.h">
			<Option target="obj_wallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/wallet_errors.h">
			<Option target="obj_wallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/wallet_rpc_server.cpp">
			<Option target="wallet_rpc_server"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/wallet_rpc_server.h">
			<Option target="obj_wallet"/>
			<Option target="wallet_rpc_server"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/wallet_rpc_server_commands_defs.h">
			<Option target="obj_wallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/wallet_rpc_server_error_codes.h">
			<Option target="obj_wallet"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/CMakeLists.txt">
			<Option virtualFolder="CMake Files\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/CMakeLists.txt">
			<Option virtualFolder="CMake Files\external\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/easylogging++/CMakeLists.txt">
			<Option virtualFolder="CMake Files\external\easylogging++\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/CMakeLists.txt">
			<Option virtualFolder="CMake Files\external\miniupnp\miniupnpc\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/miniupnp/miniupnpc/miniupnpcstrings.h.cmake">
			<Option virtualFolder="CMake Files\external\miniupnp\miniupnpc\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/db_drivers/CMakeLists.txt">
			<Option virtualFolder="CMake Files\external\db_drivers\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/external/db_drivers/liblmdb/CMakeLists.txt">
			<Option virtualFolder="CMake Files\external\db_drivers\liblmdb\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/p2p/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\p2p\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_protocol/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\cryptonote_protocol\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/common/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\common\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/crypto/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\crypto\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/ringct/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\ringct\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/checkpoints/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\checkpoints\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_basic/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\cryptonote_basic\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/cryptonote_core/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\cryptonote_core\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/multisig/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\multisig\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_db/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\blockchain_db\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/mnemonics/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\mnemonics\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/rpc/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\rpc\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/serialization/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\serialization\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\wallet\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/wallet/api/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\wallet\api\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/simplewallet/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\simplewallet\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/gen_multisig/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\gen_multisig\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemonizer/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\daemonizer\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/daemon/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\daemon\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blockchain_utilities/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\blockchain_utilities\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/debug_utilities/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\debug_utilities\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/blocks/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\blocks\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/src/device/CMakeLists.txt">
			<Option virtualFolder="CMake Files\src\device\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake/CheckLinkerFlag.c">
			<Option virtualFolder="CMake Files\cmake\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake/CheckLinkerFlag.cmake">
			<Option virtualFolder="CMake Files\cmake\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake/Doxyfile.in">
			<Option virtualFolder="CMake Files\cmake\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake/Doxygen.extra.css.in">
			<Option virtualFolder="CMake Files\cmake\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake/FindHIDAPI.cmake">
			<Option virtualFolder="CMake Files\cmake\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake/FindMiniupnpc.cmake">
			<Option virtualFolder="CMake Files\cmake\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake/FindReadline.cmake">
			<Option virtualFolder="CMake Files\cmake\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake/FindUnbound.cmake">
			<Option virtualFolder="CMake Files\cmake\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake/Version.cmake">
			<Option virtualFolder="CMake Files\cmake\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake/test-static-assert.c">
			<Option virtualFolder="CMake Files\cmake\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake/test-static-assert.cpp">
			<Option virtualFolder="CMake Files\cmake\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/cmake-build-debug/generate_translations_header-prefix/tmp/generate_translations_header-cfgcmd.txt.in">
			<Option virtualFolder="CMake Files\cmake-build-debug\generate_translations_header-prefix\tmp\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/contrib/CMakeLists.txt">
			<Option virtualFolder="CMake Files\contrib\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/contrib/epee/CMakeLists.txt">
			<Option virtualFolder="CMake Files\contrib\epee\"/>
		</Unit>
		<Unit filename="/home/heinenn/Coding/ombre/contrib/epee/src/CMakeLists.txt">
			<Option virtualFolder="CMake Files\contrib\epee\src\"/>
		</Unit>
	</Project>
</CodeBlocks_project_file>
